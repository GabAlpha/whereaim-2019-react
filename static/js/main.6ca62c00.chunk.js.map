{"version":3,"sources":["componenti/azioni.js","componenti/youtube.js","componenti/mappa2.js","componenti/microfono2.js","componenti/controlli.js","App.js","serviceWorker.js","reducers/index.js","index.js","componenti/localStore.js"],"names":["posti","fetchHereGeocode","payload","dispatch","requestGeocodeResults","url","URL","params","q","inputValue","format","limit","search","URLSearchParams","fetch","then","response","json","data","processGeocodeResponse","catch","error","console","results","latLng","processedResults","address","push","title","display_name","description","place_id","displayposition","lat","lng","lon","parseGeocodeResponse","receiveGeocodeResults","type","updateTextInput","processPlacesResponse","category","bbox","color","features","length","parsePlacesResponse","receivePlacesResults","boundingbox","places","requestPlacesResults","doUpdateBoundingBox","updateBoundingBox","conteggio","reqWiki","urlf","descrizione","urldes","action","titles","prop","exchars","riceviWiki","query","pages","Object","keys","extract","fotoUrl","textDescrzione","urlfoto","urldescrzione","pulisciWiki","cooClips","options","part","maxResults","punti","style","width","height","mapParams","center","zoomControl","maxBounds","L","latLngBounds","zoom","mappaEsterna","placesLayer","featureGroup","markersLayer","Mappa","this","map","props","tileLayer","attribution","addTo","addLayer","createPane","opacity","control","position","locate","on","getBounds","icon","prevProps","lastCall","isochronesControls","addPlaces","userInput","addIsochronesCenter","clearLayers","isochronesCenter","settings","circleMarker","bindTooltip","permanent","setView","cnt","place","hasOwnProperty","placeObj","link","properties","wikidata","name","rate","geometry","coordinates","radius","id","weight","bindPopup","undefined","callback","res","OpenLocationCode","encode","getCenter","replace","searchYoutube","result","olcClips","items","elemento","snippet","slice","filter","Boolean","a","decode","longitudeCenter","latitudeCenter","unshift","log","cercaYoutube","item","React","Component","connect","state","placesControls","Mp3Recorder","MicRecorder","bitrate","audioState","base64data","Mic","start","bloccato","alert","setState","staRegistrando","e","stop","getMp3","blob","blobURL","createObjectURL","reader","FileReader","readAsDataURL","onloadend","clear","localStorage","window","location","reload","saveAudio","blobAudio","navigator","mediaDevices","getUserMedia","audio","src","controls","Button","circular","onClick","disabled","blob64","herePlaces","0","nomePosto","counter","segmentStyle","zIndex","top","left","maxHeight","padding","overflow","segmentStyle2","marginLeft","Control","handleSearchChange","event","userTextInput","target","value","fetchGeocodeResults","handleResultSelect","handleClick","getState","lon_min","lonMin","lat_min","latMin","lon_max","lonMax","lat_max","latMax","apikey","nextButton","Qwiki","LatLng","openPopup","urlInv","uripar","paramsInv","uris","entities","image","sitelinks","itwiki","prevButton","handleClickClear","setEditormode","editorMode","setBrowsermode","componentDidUpdate","message","receivedAt","toast","topic","time","areButtonsDisabled","buttonsDisabled","key","bind","debounce","editorRender","CustomButton","content","handler","basic","size","loading","fluid","isFetching","urlDescrzione","urlFoto","className","Search","onSearchChange","onResultSelect","input","placeholder","Divider","dangerouslySetInnerHTML","__html","Segment","textAlign","index","geocodeResults","infoWiki","App","hostname","match","initialIsochronesControlsState","isochrones","isFetchingIsochrones","range","max","interval","mode","rangetype","traffic","initialPlacesState","Date","now","rootReducer","combineReducers","lastCompute","_southWest","_northEast","middleware","thunk","persistedState","serializedState","getItem","JSON","parse","err","loadState","store","createStore","reducer","composeWithDevTools","applyMiddleware","subscribe","stringify","setItem","saveState","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ca62c00.chunk.js","sourcesContent":["// use these or add your own credentials, sign up at here maps for a developer account at https://account.here.com/sign-in\r\nconst apikey = '5ae2e3f221c38a28845f05b637122877ed798c08259996c2c5be7388'\r\n\r\n// 3 new action types\r\nexport const RECEIVE_PLACES_RESULTS = 'RECEIVE_PLACES_RESULTS'\r\nexport const REQUEST_PLACES_RESULTS = 'REQUEST_PLACES_RESULTS'\r\nexport const CLEAR = 'CLEAR'\r\nexport const UPDATE_BBOX = 'UPDATE_BBOX'\r\nexport const RESULT_HANDLER = 'RESULT_HANDLER'\r\nexport const UPDATE_TEXTINPUT = 'UPDATE_TEXTINPUT'\r\nexport const RECEIVE_GEOCODE_RESULTS = 'RECEIVE_GEOCODE_RESULTS'\r\nexport const REQUEST_GEOCODE_RESULTS = 'REQUEST_GEOCODE_RESULTS'\r\nexport const UPDATE_CENTER = 'UPDATE_CENTER'\r\nexport const ADD_AUDIO = 'ADD_AUDIO'\r\nexport const RECEIVE_INFO = 'RECEIVE_INFO'\r\nexport const WIKI_CLEAR = 'WIKI_CLEAR'\r\n\r\nexport var posti = 0\r\n\r\nexport const fetchHereGeocode = payload => dispatch => {\r\n\r\n  // It dispatches a further action to let our state know that requests are about to be made (loading spinner listens to this!)\r\n  dispatch(requestGeocodeResults())\r\n\r\n  // we define our url and parameters to be sent along\r\n  let url = new URL('https://nominatim.openstreetmap.org/search'),\r\n    params = {\r\n      q: payload.inputValue,\r\n      format: \"json\",\r\n      limit: '4'\r\n    }\r\n\r\n  url.search = new URLSearchParams(params)\r\n  const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n  // we use the fetch API to call HERE Maps with our parameters\r\n  return fetch(proxyurl + url)\r\n    // when a response is returned we extract the json data\r\n    .then(response => response.json())\r\n    // and this data we dispatch for processing in processGeocodeResponse\r\n    .then(data => dispatch(processGeocodeResponse(data)))\r\n    .catch(error => console.error(error))\r\n}\r\n\r\nconst parseGeocodeResponse = (json, latLng) => {\r\n    let processedResults = []\r\n    for(var address of json){\r\n        processedResults.push({\r\n          title: address.display_name,\r\n          description: address.place_id,\r\n          displayposition: {\r\n            lat: address.lat,\r\n            lng: address.lon\r\n          }\r\n        })\r\n  }\r\n  return processedResults\r\n}\r\n\r\nconst processGeocodeResponse = (\r\n  json\r\n) => dispatch => {\r\n  // parse the json file and dispatch the results to receiveGeocodeResults which will be reduced\r\n  const results = parseGeocodeResponse(json)\r\n  // let's let the loading spinner now that it doesn't have to spin anymore\r\n  dispatch(receiveGeocodeResults(results))\r\n}\r\n\r\nexport const receiveGeocodeResults = payload => ({\r\n  type: RECEIVE_GEOCODE_RESULTS,\r\n  results: payload\r\n})\r\n\r\nexport const requestGeocodeResults = payload => ({\r\n  type: REQUEST_GEOCODE_RESULTS,\r\n  ...payload\r\n})\r\n\r\nexport const updateTextInput = payload => ({\r\n  type: UPDATE_TEXTINPUT,\r\n  payload\r\n})\r\n\r\nexport const updateCenter = payload => ({\r\n   type: UPDATE_CENTER,\r\n   ...payload\r\n})\r\n\r\n\r\n// this function takes care of the call to the HERE Maps API\r\nexport const fetchHerePlaces = payload => (dispatch, getState) => {\r\n  // this simple dispatcher will make sure our loading icon spins ;-)\r\n  dispatch(requestPlacesResults({ category: payload.category }))\r\n\r\n  // here we have to access our state in the action to retrieve the boundingbox\r\n  // of the map which will be reduced in the subsequent step\r\n  const { boundingbox } = getState().placesControls\r\n\r\n  // to learn more about the parameters use this link https://developer.here.com/documentation/places/topics/search-results-ranking.html\r\n  const url = new URL(\r\n    'http://api.opentripmap.com/0.1/en/places/bbox'\r\n  )\r\n  const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n  const params = {\r\n    lon_min: boundingbox.lonMin,\r\n    lat_min: boundingbox.latMin,\r\n    lon_max: boundingbox.lonMax,\r\n    lat_max: boundingbox.latMax,\r\n    format: 'geojson',\r\n    apikey: apikey\r\n  }\r\n\r\n  url.search = new URLSearchParams(params)\r\n\r\n  return fetch(proxyurl + url)\r\n    .then(response => response.json())\r\n    .then(data =>\r\n      // once the data as json is returned we will dispatch the parsing of the data which will include the category and color passed through from the button properties\r\n      dispatch(\r\n        processPlacesResponse(\r\n          data,\r\n          payload.category,\r\n          boundingbox,\r\n          payload.color\r\n        )\r\n      )\r\n    )\r\n    .catch(error => console.error(error))\r\n}\r\n\r\nexport const sendMessage = message => ({\r\n  type: RESULT_HANDLER,\r\n  payload: message\r\n})\r\n\r\n\r\n// to clear the places!\r\nexport const clear = () => ({\r\n  type: CLEAR\r\n})\r\n\r\nconst parsePlacesResponse = json => {\r\n  if (json.features.length > 0) {\r\n    return json.features\r\n  }\r\n  return []\r\n}\r\n\r\nconst processPlacesResponse = (json, category, bbox, color) => dispatch => {\r\n  const results = parsePlacesResponse(json)\r\n  // the response is parsed and ready to be dispatched to our reducer\r\n  dispatch(\r\n    receivePlacesResults({\r\n      data: results,\r\n      category: category,\r\n      boundingbox: bbox,\r\n      color: color\r\n    })\r\n  )\r\n  posti = results\r\n}\r\n\r\nexport const receivePlacesResults = places => ({\r\n  type: RECEIVE_PLACES_RESULTS,\r\n  payload: places,\r\n\r\n})\r\n\r\nexport const requestPlacesResults = category => ({\r\n  type: REQUEST_PLACES_RESULTS,\r\n  payload: category\r\n})\r\n\r\nexport const doUpdateBoundingBox = boundingbox => dispatch => {\r\n    const bbox = boundingbox\r\n    dispatch(updateBoundingBox(bbox))\r\n  }\r\n  \r\nconst updateBoundingBox = bbox => ({\r\n    type: UPDATE_BBOX,\r\n    payload: bbox\r\n})\r\n\r\nexport const checkLimit = () => dispatch => {\r\n  if (posti.length > 1000) {\r\n    dispatch(clear())\r\n    posti = {}\r\n    dispatch(\r\n      sendMessage({\r\n        type: 'warning',\r\n        icon: 'warning',\r\n        description:\r\n          'Hai raggiunto il limite di 1000 elementi su schermo'\r\n      }) \r\n    )\r\n  }\r\n}\r\n\r\nlet conteggio = 1\r\nexport const addAudio = blobAudio => {\r\n  return {\r\n    type: ADD_AUDIO,\r\n    id: conteggio++,\r\n    blobAudio\r\n  }\r\n} \r\n\r\nexport const reqWD = Qwiki => dispatch => {\r\n  dispatch(pulisciWiki())\r\n  const urlInv = new URL('https://inventaire.io/api/entities')\r\n  const uripar = \"wd:\" + Qwiki\r\n  const paramsInv = {\r\n    action: \"by-uris\",\r\n    uris: uripar\r\n  }\r\n\r\n  urlInv.search = new URLSearchParams(paramsInv)\r\n\r\n  //console.log(urlInv)\r\n\r\n  fetch(urlInv)\r\n  .then(response => response.json())\r\n  .then(data => dispatch(reqWiki(data.entities[uripar].image.url, data.entities[uripar].sitelinks.itwiki)))\r\n  .catch(error => console.error(error))\r\n}\r\n\r\n\r\nconst reqWiki = (urlf, descrizione) => dispatch => {\r\n  const urldes = new URL('https://it.wikipedia.org/w/api.php')\r\n  const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n  const params = {\r\n    action:\"query\",\r\n    titles: descrizione,\r\n    prop: \"extracts\",\r\n    format: \"json\",\r\n    exchars: 150\r\n  }\r\n\r\n  urldes.search = new URLSearchParams(params)\r\n\r\n  fetch(proxyurl + urldes)\r\n  .then(response => response.json())\r\n  .then(data => dispatch(riceviWiki(urlf, data.query.pages[Object.keys(data.query.pages)[0]].extract)))\r\n  .catch(error => console.error(error))\r\n}\r\n\r\n\r\nexport const riceviWiki = (fotoUrl, textDescrzione) => ({\r\n    type: RECEIVE_INFO,\r\n    urlfoto: fotoUrl,\r\n    urldescrzione: textDescrzione\r\n})\r\n\r\nexport const pulisciWiki = () => ({\r\n  type:WIKI_CLEAR\r\n})\r\n","import searchYoutube from 'youtube-api-v3-search'\r\nimport OpenLocationCode from 'open-location-code-typescript'\r\nimport { mappaEsterna } from './mappa2'\r\nimport { posti } from './azioni'\r\n\r\nconst YOUTUBE_KEY = 'AIzaSyCiM_SrbJEhuio-wi0mZXI07T-vvZuSGdY'\r\nexport var cooClips = []\r\n\r\nconst options = {\r\n    q:'nodejs',\r\n    part:'snippet',\r\n    type:'video',\r\n    maxResults: 30,\r\n  }\r\n\r\n\r\nexport function cercaYoutube(callback) {\r\n    let olc = OpenLocationCode.encode(mappaEsterna.getCenter().lat,mappaEsterna.getCenter().lng, 6)\r\n    let res = olc.replace(\"+\", \"\");\r\n    options.q = res\r\n    searchYoutube(YOUTUBE_KEY, options, (error, result) => {\r\n        if (result !== undefined) {\r\n            let olcClips = result.items.map(elemento => elemento.snippet.description.slice(20,31))\r\n            olcClips = olcClips.filter(Boolean)\r\n            cooClips = olcClips.map(a => ({\r\n                geometry : {\r\n                    coordinates: [\r\n                        OpenLocationCode.decode(a).longitudeCenter, \r\n                        OpenLocationCode.decode(a).latitudeCenter\r\n                    ]\r\n                },\r\n                id : \"youtube\"\r\n            }))\r\n            cooClips.map(a => posti.unshift(a))\r\n            callback();\r\n        } else {console.log(error)}\r\n        \r\n        }\r\n    )\r\n}","import React from 'react'\r\nimport L from 'leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport \"leaflet.locatecontrol\";\r\nimport { doUpdateBoundingBox, checkLimit} from './azioni'\r\nimport { connect } from 'react-redux'\r\nimport { cooClips, cercaYoutube } from './youtube'\r\n\r\nexport var punti = []\r\n\r\n// defining the container styles the map sits in\r\nconst style = {\r\n  width: '100%',\r\n  height: '100vh'\r\n}\r\n\r\n\r\n// a leaflet map consumes parameters, I'd say they are quite self-explanatory\r\nconst mapParams = {\r\n  center: [0, 0],\r\n  zoomControl: false,\r\n  maxBounds: L.latLngBounds(L.latLng(-90, -180), L.latLng(90, 180)),\r\n  zoom: 3\r\n}\r\n\r\nexport var mappaEsterna = {}\r\n\r\nconst placesLayer = L.featureGroup()\r\nconst markersLayer = L.featureGroup()\r\n\r\n// this you have seen before, we define a react class component\r\nclass Mappa extends React.Component {\r\n  // and once the component has mounted we add everything to it\r\n  componentDidMount() {\r\n    this.map = L.map('map', mapParams)\r\n    const { dispatch } = this.props\r\n    mappaEsterna = this.map\r\n\r\n    L.tileLayer ('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n    }).addTo(this.map);\r\n\r\n    this.map.addLayer(placesLayer)\r\n    this.map.addLayer(markersLayer)\r\n\r\n\r\n    // we create a leaflet pane which will hold all cluster polygons with a given opacity\r\n    const clusterPane = this.map.createPane('clusterPane')\r\n    clusterPane.style.opacity = 0.9\r\n\r\n    // we do want a zoom control\r\n    L.control\r\n      .zoom({\r\n        position: 'topright'\r\n      })\r\n      .addTo(this.map)\r\n    \r\n    // locate button\r\n    L.control.locate({ position: 'bottomleft' }).addTo(this.map)\r\n    \r\n    // when the map is paned, update the bounding box in the redux store\r\n    this.map.on('moveend', () => {\r\n      dispatch(doUpdateBoundingBox(this.map.getBounds()))\r\n      dispatch(checkLimit())\r\n    })\r\n\r\n    // and also on load\r\n    dispatch(doUpdateBoundingBox(this.map.getBounds()))\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { lastCall } = this.props\r\n    const { isochronesControls } = this.props\r\n    // is the epoche timestamp later?\r\n    if (lastCall > prevProps.lastCall) {\r\n      // if so, then start adding places to the map\r\n      this.addPlaces()\r\n      //cercaYoutube(() => {this.addPlaces()})\r\n    }\r\n    if (isochronesControls.userInput !== prevProps.isochronesControls.userInput || isochronesControls.userInput === \"\") {\r\n      this.addIsochronesCenter();\r\n    }\r\n    \r\n  }\r\n\r\n  addIsochronesCenter() {\r\n\r\n    // clear the markers layer beforehand\r\n    markersLayer.clearLayers();\r\n\r\n    const isochronesCenter = this.props.isochronesControls.settings.isochronesCenter;\r\n    // does this object contain a latitude and longitude?\r\n    if (isochronesCenter.lat && isochronesCenter.lng) {\r\n      // we are creating a leaflet circle marker with a minimal tooltip\r\n      L.circleMarker(isochronesCenter)\r\n        .addTo(markersLayer)\r\n        .bindTooltip(\r\n          \"latitude: \" +\r\n            isochronesCenter.lat +\r\n            \", \" +\r\n            \"longitude: \" +\r\n            isochronesCenter.lng,\r\n          {\r\n            permanent: false\r\n          }\r\n        )\r\n\r\n      // set the map view\r\n      this.map.setView(isochronesCenter, 14);\r\n    }\r\n  }\r\n  \r\n  addPlaces() {\r\n    // let's clear the layers with the help of Leaflets mighty API\r\n    placesLayer.clearLayers()\r\n    // places will become part of our props but for this we have to connect this component to our state in the next step\r\n    const { places } = this.props\r\n    let cnt = 0\r\n    // loop through our places\r\n    for (const place in places) {\r\n      // make sure data is there ;-)\r\n      if (\r\n        places[place].hasOwnProperty('data') &&\r\n        places[place].data.length > 0 \r\n      ) {\r\n        // for every place in data we will add a beautiful Leaflet circlemarker with a tooltip!\r\n        for (const placeObj of places[place].data) {\r\n          const link = '<a href=\"https://www.wikidata.org/wiki/' + placeObj.properties.wikidata + '\" target=\"_blank\">'+ placeObj.properties.name + '</a>'\r\n          if (placeObj.properties.rate !== 0){\r\n            punti.push(L.circleMarker([placeObj.geometry.coordinates[1], placeObj.geometry.coordinates[0]], {\r\n            radius: 10,\r\n            id: cnt,\r\n            weight: 1,\r\n            opacity: 0.5\r\n          })\r\n            .addTo(placesLayer)\r\n            .bindPopup(placeObj.properties.wikidata!==undefined ? link : placeObj.properties.name)\r\n            )}\r\n          cnt += 1\r\n        }\r\n      }\r\n    }\r\n    cercaYoutube(() => {\r\n      cooClips.map(item => {\r\n        L.circleMarker([item.geometry.coordinates[1], item.geometry.coordinates[0]], {\r\n          radius: 10,\r\n          opacity: 0.5,\r\n          weight: 1,\r\n          color: '#f5426c'\r\n        }).addTo(placesLayer)\r\n        .bindPopup('Youtube')\r\n      })\r\n    })\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <div id=\"map\" style={style}></div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { places, lastCall } = state.placesControls\r\n  const isochronesControls = state.isochronesControls\r\n  return {\r\n    places,\r\n    lastCall,\r\n    isochronesControls,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Mappa)","import React from 'react'\r\nimport MicRecorder from 'mic-recorder-to-mp3'\r\nimport { Button } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux';\r\nimport { addAudio } from './azioni';\r\n\r\nconst Mp3Recorder = new MicRecorder({bitrate: 128})\r\nvar audioState = ''\r\nvar base64data = ''\r\n\r\nclass Mic extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            staRegistrando: false,\r\n            blobURL: '',\r\n            bloccato: false,\r\n        }\r\n      }\r\n\r\n    start = () => {\r\n        if(this.state.bloccato) {\r\n            alert(\"no deh non va\")\r\n        } else {\r\n            Mp3Recorder\r\n                .start()\r\n                .then(()=> {\r\n                    this.setState({staRegistrando: true})\r\n                }).catch((e) => console.log(\"ERRORE\"))\r\n        }\r\n    }  \r\n\r\n    stop = () => {\r\n        Mp3Recorder\r\n            .stop()\r\n            .getMp3()\r\n            .then(([buffer, blob]) => {\r\n                const blobURL = URL.createObjectURL(blob)\r\n                this.setState({blobURL, staRegistrando: false})\r\n                var reader = new FileReader()\r\n                reader.readAsDataURL(blob)\r\n                reader.onloadend = function(){\r\n                    base64data = reader.result\r\n                }\r\n            }).catch((e) => console.log(e))\r\n\r\n    }\r\n\r\n    clear = () =>{\r\n        localStorage.clear()\r\n        window.location.reload(false);\r\n    }\r\n\r\n    saveAudio = () => {\r\n        const { dispatch } = this.props\r\n        dispatch(addAudio(base64data))\r\n        console.log(\"File salvato\")\r\n        window.location.reload(false);\r\n    }\r\n\r\n    componentDidMount() {\r\n        navigator.mediaDevices.getUserMedia({audio: true}, \r\n        () => {\r\n            console.log('Daje de Permesso');\r\n            this.setState({bloccato: false})\r\n        },\r\n        () => {\r\n            console.log(\"noo deee\");\r\n            this.setState({bloccato: true})\r\n        }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {this.state.blobURL === '' ? [] : <audio src={this.state.blobURL} controls=\"controlli\" />}\r\n            <div>\r\n                <Button circular color=\"purple\" onClick={this.start} disabled={this.state.staRegistrando}>Registra</Button>\r\n                <Button circular color=\"purple\" onClick={this.stop} disabled={!this.state.staRegistrando}>Stop</Button>\r\n                <Button circular color=\"purple\" onClick={this.clear}>Cancella Tutto</Button>\r\n                <Button circular color=\"purple\" onClick={this.saveAudio}>Salva Internamente</Button>\r\n            </div>\r\n            {audioState.blob64.map(elemento => (<div><audio src={elemento} controls=\"controlli\"/></div>))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    audioState = state.audio\r\n    return {\r\n        audioState\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Mic)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Segment, Button, Search, Divider, Label } from 'semantic-ui-react'\r\nimport { mappaEsterna } from './mappa2'\r\nimport L from 'leaflet'\r\nimport { SemanticToastContainer, toast } from 'react-semantic-toasts'\r\nimport { posti, reqWD, pulisciWiki, initWiki } from './azioni'\r\nimport { punti } from './mappa2'\r\n// our actions which yet have to be scripted!\r\nimport { fetchHerePlaces, clear } from './azioni'\r\nimport { updateTextInput, fetchHereGeocode, updateCenter } from \"./azioni\"\r\n\r\n// to wait for the users input we will add debounce, this is especially useful for \"postponing\" the geocode requests\r\nimport { debounce } from \"throttle-debounce\"\r\nimport Editor from './microfono2'\r\n\r\n// some HERE Maps places categories we want to be able to fetch with some cute colors\r\nconst herePlaces = {\r\n  0: { name: 'POI', color: 'red' },\r\n}\r\n\r\nvar nomePosto = ' '\r\nvar counter = -1\r\n\r\nconst segmentStyle = {\r\n  zIndex: 999,\r\n  position: \"absolute\",\r\n  width: \"400px\",\r\n  top: \"10px\",\r\n  left: \"10px\",\r\n  maxHeight: \"calc(100vh - 5vw)\",\r\n  padding: \"20px\",\r\n  overflow: \"auto\"\r\n};\r\n\r\nconst segmentStyle2 = {\r\n  zIndex: 999,\r\n  position: \"absolute\",\r\n  width: \"200px\",\r\n  top: \"86vh\",\r\n  left: \"50%\",\r\n  marginLeft: \"-100px\",\r\n  overflow: \"auto\",\r\n  padding: \"10px\",\r\n};\r\n\r\n\r\nclass Control extends React.Component {\r\n  static propTypes = {\r\n    places: PropTypes.object,\r\n    dispatch: PropTypes.func.isRequired,\r\n    message: PropTypes.object\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleSearchChange = this.handleSearchChange.bind(this)\r\n    this.fetchGeocodeResults = debounce(1000, this.fetchGeocodeResults)\r\n    this.state = {editorMode: false};\r\n  }\r\n\r\n  // if the input has changed... fetch some results!\r\n  handleSearchChange = event => {\r\n    const { dispatch, userTextInput } = this.props;\r\n    if (userTextInput.length === 0) {\r\n      dispatch(\r\n        fetchHereGeocode({\r\n          inputValue: ''\r\n        })\r\n      )\r\n    }\r\n    dispatch(\r\n      updateTextInput({\r\n        inputValue: event.target.value\r\n      })\r\n    )\r\n    this.fetchGeocodeResults()\r\n  }\r\n\r\n  // if a user selects one of the geocode results update the input text field and set our center coordinates\r\n  handleResultSelect = (e, { result }) => {\r\n    const { dispatch } = this.props;\r\n    dispatch(\r\n      updateTextInput({\r\n        inputValue: result.title\r\n      })\r\n    );\r\n\r\n    dispatch(\r\n      updateCenter({\r\n        isochronesCenter: result.displayposition\r\n      })\r\n    );\r\n\r\n  };\r\n\r\n  // our method to fire a geocode request\r\n  fetchGeocodeResults() {\r\n    const { dispatch, userTextInput } = this.props\r\n    // If the text input has more then 0 characters..\r\n    if (userTextInput.length > 0) {\r\n      dispatch(\r\n        fetchHereGeocode({\r\n          inputValue: userTextInput\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  // what happens if we click a places button\r\n  handleClick = (event, data) => {\r\n    counter = -1\r\n    punti.length = 0\r\n    const { dispatch } = this.props\r\n    dispatch(fetchHerePlaces({ category: data.value, color: data.color }))\r\n  }\r\n\r\n  nextButton = () => {\r\n    const { dispatch } = this.props\r\n    counter ++\r\n    if (posti[counter].id === \"youtube\" ) {\r\n      mappaEsterna.setView(new L.LatLng(posti[counter].geometry.coordinates[1], posti[counter].geometry.coordinates[0]), 19)\r\n      punti[counter].openPopup()\r\n    } else {\r\n      dispatch(reqWD(posti[counter].properties.wikidata))\r\n      mappaEsterna.setView(new L.LatLng(posti[counter].geometry.coordinates[1], posti[counter].geometry.coordinates[0]), 19) \r\n      nomePosto = posti[counter].properties.name\r\n      punti[counter].openPopup()\r\n    }\r\n    console.log(posti[counter])\r\n  }\r\n  \r\n  prevButton = () => {\r\n    counter --\r\n    mappaEsterna.setView(new L.LatLng(posti[counter].geometry.coordinates[1], posti[counter].geometry.coordinates[0]), 19) \r\n    punti[counter].openPopup()\r\n  }\r\n\r\n  // and also what happens if we click the remove icon\r\n  handleClickClear = () => {\r\n    const { dispatch } = this.props\r\n    dispatch(clear())\r\n  }\r\n\r\n  setEditormode = () => {\r\n    this.setState({editorMode: true});\r\n  }\r\n\r\n  setBrowsermode = () => {\r\n    this.setState({editorMode: false});\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {dispatch} = this.props\r\n    dispatch(pulisciWiki())\r\n  }\r\n\r\n  componentDidUpdate = prevProps => {\r\n    const { message } = this.props\r\n    if (message.receivedAt > prevProps.message.receivedAt) {\r\n      toast({\r\n        type: message.type,\r\n        icon: message.icon,\r\n        title: message.topic,\r\n        description: message.description,\r\n        time: 5000\r\n      })\r\n    }\r\n  }\r\n\r\n  // some buttons can be disabled if no places exist..\r\n  areButtonsDisabled = places => {\r\n    let buttonsDisabled = true\r\n    for (const key in places) {\r\n      if (places.hasOwnProperty(key)) {\r\n        if (places[key].hasOwnProperty('data') && places[key].data.length > 0) {\r\n          buttonsDisabled = false\r\n        }\r\n      }\r\n    }\r\n    return buttonsDisabled\r\n  }\r\n\r\n  render() {\r\n    const { places } = this.props\r\n    const editorMode = this.state.editorMode;\r\n    let editorRender\r\n    const CustomButton = ({\r\n      content,\r\n      circular,\r\n      handler,\r\n      icon,\r\n      disabled,\r\n      basic,\r\n      size,\r\n      loading,\r\n      color,\r\n      value,\r\n      fluid\r\n    }) => (\r\n          <Button\r\n            color={color}\r\n            circular={circular}\r\n            content={content}\r\n            loading={loading}\r\n            size={size}\r\n            onClick={handler}\r\n            basic={basic}\r\n            disabled={disabled}\r\n            icon={icon}\r\n            value={value}\r\n            fluid={fluid}\r\n          />\r\n    )\r\n\r\n    const {\r\n      isFetching,\r\n      userTextInput,\r\n      results,\r\n      urlDescrzione,\r\n      urlFoto,\r\n    } = this.props;\r\n\r\n    if (editorMode) {\r\n      editorRender = (\r\n        <div>\r\n          <Button onClick={this.setBrowsermode} color=\"purple\" icon=\"plus\"></Button>\r\n          <Editor />\r\n        </div>\r\n      );\r\n    } else {\r\n      editorRender = (\r\n        <div>\r\n            <div className=\"flex justify-between items-center mt3\">\r\n                <Search\r\n                  onSearchChange={this.handleSearchChange}\r\n                  onResultSelect={this.handleResultSelect}\r\n                  type=\"text\"\r\n                  input={{ fluid: true }}\r\n                  fluid\r\n                  loading={isFetching}\r\n                  className=\"flex-grow-1 mr2\"\r\n                  results={results}\r\n                  value={userTextInput}\r\n                  placeholder=\"Find Address ...\"\r\n                />\r\n                <Button\r\n                  circular\r\n                  color=\"purple\"\r\n                  icon=\"plus\"\r\n                  onClick={this.setEditormode}\r\n                />\r\n                <Button\r\n                  circular\r\n                  color=\"purple\"\r\n                  icon=\"delete\"\r\n                  onClick={this.handleClickClear}\r\n                />\r\n            </div>\r\n            {urlDescrzione !== \"\" ?\r\n            <div>\r\n              <Divider />\r\n              <h2>{nomePosto}</h2>\r\n              <Divider />\r\n              <img src={urlFoto !== \"\" ? urlFoto : \"\"} width=\"300\"></img>\r\n              <Divider />\r\n              <p dangerouslySetInnerHTML={{__html: urlDescrzione}}></p>\r\n            </div>\r\n            : \"\"}\r\n          </div>\r\n      );\r\n    }\r\n    \r\n    return (\r\n      <div>\r\n        <Segment style={segmentStyle}>\r\n          <div>\r\n              <span>\r\n                Benvenuto su <strong>Where I AM</strong> by <strong>Gabriele Alfarano</strong>\r\n              </span>\r\n            </div>\r\n            <Divider />\r\n            {editorRender}\r\n          </Segment>\r\n          <Segment style={segmentStyle2} textAlign='center'>\r\n          <div>\r\n            {Object.keys(herePlaces).map((key, index) => {\r\n              return (\r\n                <div>\r\n                  <CustomButton\r\n                  icon=\"angle left icon\"\r\n                  disabled={false}\r\n                  handler={this.prevButton}\r\n                  color=\"basic blue\"\r\n                  loading={null}\r\n                  size=\"tiny\"\r\n                  circular\r\n                />\r\n                   <CustomButton\r\n                    icon=\"search icon\"\r\n                    value={herePlaces[key].name}\r\n                    disabled={false}\r\n                    handler={this.handleClick}\r\n                    color=\"blue\"\r\n                    loading={\r\n                      places[herePlaces[key].name]\r\n                        ? places[herePlaces[key].name].isFetching\r\n                        : false\r\n                    }\r\n                    size=\"large\"\r\n                    circular\r\n                  />\r\n                  <CustomButton\r\n                    icon=\"angle right icon\"\r\n                    disabled={false}\r\n                    handler={this.nextButton}\r\n                    color=\"basic blue\"\r\n                    loading={null}\r\n                    size=\"tiny\"\r\n                    circular\r\n                  />\r\n                </div>\r\n              )\r\n            })} \r\n          </div>\r\n        </Segment>\r\n        <SemanticToastContainer position=\"bottom-center\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// connecting this class component to our react store!\r\nconst mapStateToProps = state => {\r\n  const { places, message } = state.placesControls\r\n  const userTextInput = state.isochronesControls.userInput\r\n  const results = state.isochronesControls.geocodeResults\r\n  const isFetching = state.isochronesControls.isFetching\r\n  const {urlFoto, urlDescrzione} = state.infoWiki\r\n\r\n  return {\r\n    places,\r\n    message,\r\n    userTextInput,\r\n    results,\r\n    isFetching,\r\n    urlFoto,\r\n    urlDescrzione\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Control)","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Mappa from './componenti/mappa2';\nimport Controlli from './componenti/controlli'\n\nfunction App() {\n  return (\n    <div>\n        <Mappa />\n        <Controlli />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\r\nimport {\r\n  REQUEST_PLACES_RESULTS,\r\n  RECEIVE_PLACES_RESULTS,\r\n  CLEAR,\r\n  UPDATE_BBOX,\r\n  RESULT_HANDLER,\r\n  ADD_AUDIO,\r\n  RECEIVE_INFO,\r\n  WIKI_CLEAR,\r\n} from '../componenti/azioni'\r\n\r\n\r\nimport {\r\n  UPDATE_TEXTINPUT,\r\n  REQUEST_GEOCODE_RESULTS,\r\n  RECEIVE_GEOCODE_RESULTS,\r\n  UPDATE_CENTER\r\n} from '../componenti/azioni'\r\n\r\n\r\n\r\nconst initialIsochronesControlsState = {\r\n  userInput: \"\",\r\n  geocodeResults: [],\r\n  isochrones: {\r\n    results: []\r\n  },\r\n  isFetching: false,\r\n  isFetchingIsochrones: false,\r\n  settings: {\r\n    isochronesCenter: {},\r\n    range: {\r\n      max: 500,\r\n      value: 60\r\n    },\r\n    interval: {\r\n      max: 60,\r\n      value: 10\r\n    },\r\n    mode: \"car\",\r\n    rangetype: \"distance\",\r\n    traffic: \"disabled\"\r\n  }\r\n}\r\n\r\n// our reducer constant returning an unchanged or updated state object depending on the users action, many cases will follow\r\nconst isochronesControls = (state = initialIsochronesControlsState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state\r\n      case UPDATE_TEXTINPUT:\r\n        return {\r\n          ...state,\r\n          userInput: action.payload.inputValue\r\n        }\r\n      // let the app know the request is being made (for our spinner)\r\n      case REQUEST_GEOCODE_RESULTS:\r\n        return {\r\n          ...state,\r\n          isFetching: true\r\n        }\r\n      // when results are returned by the API update the state with addresses and let the app know it is no longer fetching\r\n      case RECEIVE_GEOCODE_RESULTS:\r\n        return {\r\n          ...state,\r\n          geocodeResults: action.results,\r\n          isFetching: false\r\n        }\r\n      // update the isochronesCenter we will use later from the coordinates of the selected address\r\n      case UPDATE_CENTER:\r\n        return {\r\n          ...state,\r\n          settings: {\r\n            ...state.settings,\r\n            isochronesCenter: action.isochronesCenter\r\n          }\r\n        }\r\n  }\r\n}\r\n\r\n// our initial state object with an empty boundingbox string, a lastCall Date field and an empty places object\r\nconst initialPlacesState = {\r\n  boundingbox: { lonMin: '', latMin: '', lonMax:'', latMax:''},\r\n  message: { receivedAt: 0 },\r\n  lastCall: Date.now(),\r\n  places: {}\r\n}\r\n\r\n// this is our switch clause which will reduce the actions depending on what is being called\r\nconst placesControls = (state = initialPlacesState, action) => {\r\n  \r\n  switch (action.type) {\r\n    default:\r\n      return state\r\n\r\n    // as mentioned above we want to let our button know that it is doing something\r\n    case REQUEST_PLACES_RESULTS:\r\n      return {\r\n        ...state,\r\n        places: {\r\n          ...state.places,\r\n          [action.payload.category]: {\r\n            ...state.places,\r\n            isFetching: true\r\n          }\r\n        }\r\n      }\r\n\r\n    // if results are received we will start reducing our state\r\n    case RECEIVE_PLACES_RESULTS:\r\n      return {\r\n        ...state,\r\n        // when was this data received\r\n        lastCall: Date.now(),\r\n        // updating our places object\r\n        places: {\r\n          ...state.places,\r\n          // for the requested category\r\n          [action.payload.category]: {\r\n            ...state.places[action.payload.category],\r\n            // this ternary operator decides if we will merge previous calls or not\r\n            data: state.places[action.payload.category].hasOwnProperty('data')\r\n              ? [\r\n                  ...state.places[action.payload.category].data,\r\n                  ...action.payload.data\r\n                ]\r\n              : action.payload.data,\r\n            // of course we will want to save the boundingbox of this API request\r\n            boundingbox: action.payload.boundingbox,\r\n            // and the color (used for the map later!)\r\n            color: action.payload.color,\r\n            // and make sure our spinner is disabled again\r\n            isFetching: false,\r\n          }\r\n        }\r\n      }\r\n\r\n    // self explanatory - I hope!\r\n    case CLEAR:\r\n      return {\r\n        ...state,\r\n        places: {},\r\n        lastCall: Date.now(),\r\n        lastCompute: Date.now()\r\n      }\r\n\r\n      case UPDATE_BBOX:\r\n        return {\r\n          ...state,\r\n          boundingbox: { lonMin: action.payload._southWest.lng, latMin: action.payload._southWest.lat, lonMax: action.payload._northEast.lng, latMax: action.payload._northEast.lat}\r\n        }\r\n\r\n        case RESULT_HANDLER: {\r\n          return {\r\n            ...state,\r\n            message: {\r\n              ...state.message,\r\n              ...action.payload,\r\n              receivedAt: Date.now()\r\n            }\r\n          }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst audio = (state = {id: 0, blob64: []}, action)  => {\r\n  switch(action.type) {\r\n    default:\r\n      return state\r\n    case ADD_AUDIO: {\r\n      state.id = action.id\r\n      state.blob64.push(action.blobAudio)\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst infoWiki = (state = {urlFoto: '', urlDescrzione: ''}, action) => {\r\n  switch(action.type){\r\n    default:\r\n      return state\r\n    case RECEIVE_INFO:\r\n      return {\r\n        urlFoto: action.urlfoto,\r\n        urlDescrzione: action.urldescrzione\r\n      }\r\n    case WIKI_CLEAR:\r\n      return {\r\n        urlFoto:'',\r\n        urlDescrzione: ''\r\n      }\r\n  }\r\n}\r\n\r\n\r\n// we combine reducers here, in our case it is only one\r\nconst rootReducer = combineReducers({\r\n  placesControls,\r\n  isochronesControls,\r\n  audio,\r\n  infoWiki\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//API di Redux\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { loadState, saveState } from './componenti/localStore'\n\nimport reducer from './reducers'\n\nconst middleware = [thunk]\nconst persistedState = loadState()\n\nconst store = createStore(\n    reducer,\n    persistedState,\n    composeWithDevTools(applyMiddleware(...middleware))\n  )\n\nstore.subscribe(() => {\n    saveState(store.getState()) \n});\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem('state')\r\n        if(serializedState === null) {\r\n            return undefined\r\n        }\r\n        return JSON.parse(serializedState)\r\n    } catch (err) {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state)\r\n        localStorage.setItem('state', serializedState)\r\n    } catch (err) {\r\n        //nulla\r\n    }\r\n}"],"sourceRoot":""}